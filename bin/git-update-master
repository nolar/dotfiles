#!/usr/bin/env bash
#set -x

# Which repo to auto-fastforward.
repo="${1:-$(pwd)}"
cd "$repo" || exit 1

# Which branch to auto-fastforward.
shift
branches=${*:-"dev main master"}

is_dirty="$(git diff --shortstat)"
current_branch="$(git branch | sed -n '/\* /s///p')"
for branch in $branches; do
  has_branch=$( git branch | egrep -q " $branch"'$' && echo "yes" || echo "" )

  if [[ "$current_branch" == "$branch" && -n "$is_dirty" ]] ; then
    echo "Cannot fast-forward because the repo has diff on top of '$branch': $repo" >&2
    exit 1

  elif git remote get-url upstream >/dev/null 2>&1 ; then  # has an upstream?
    if [[ "$current_branch" == "$branch" ]] ; then
      git pull upstream "$branch"
    elif [[ "$has_branch" ]]; then
      git fetch upstream "$branch":"$branch"
    fi

  elif git remote get-url origin >/dev/null 2>&1 ; then  # has an origin?
    if [[ "$current_branch" == "$branch" ]] ; then
      git pull origin "$branch"
    elif [[ "$has_branch" ]]; then
      git fetch origin "$branch":"$branch"
    fi

  else
    echo "No known remotes defined: $repo" >&2
    exit 1
  fi

  # If there is a "wip" repo, update its master with the local one.
  if git remote get-url wip >/dev/null 2>&1 ; then
    if [[ "$current_branch" == "$branch" ]] ; then
      git push wip "$branch"
    elif [[ "$has_branch" ]]; then
        git push wip "$branch":"$branch"
    fi
  fi

done
